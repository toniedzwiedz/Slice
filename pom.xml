<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cognifide.slice</groupId>
	<artifactId>slice-parent</artifactId>
	<version>4.5.1-SNAPSHOT</version>

	<name>Slice - Parent</name>
	<url>http://cognifide.com/</url>
	<description>parent project for Slice framework</description>
	<packaging>pom</packaging>

	<inceptionYear>2012</inceptionYear>
	<organization>
		<name>Cognifide Limited</name>
		<url>http://www.cognifide.com</url>
	</organization>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<modules>
		<module>slice-core-api</module>
		<module>slice-core</module>
		<module>slice-mapper-api</module>
		<module>slice-mapper</module>
		<module>slice-test</module>
		<module>slice-persistence-api</module>
		<module>slice-persistence</module>
		<module>slice-assembly</module>
	</modules>

	<properties>
		<file.encoding>UTF-8</file.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.pluggin.version>3.5.1</maven.compiler.pluggin.version>
		<maven.compile.source>1.6</maven.compile.source>
		<maven.compile.target>1.6</maven.compile.target>
		<maven.compiler.version>1.6</maven.compiler.version>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<site.root>.\src\main\resources</site.root>
		<sling.install.skip>true</sling.install.skip>

		<assembly.descriptor.file>cq.xml</assembly.descriptor.file>
		<assembly.path>${project.build.directory}/${project.build.finalName}-cq.zip</assembly.path>
		<crx.package.name>${project.artifactId}</crx.package.name>
		<cq.package.name>slice</cq.package.name>

		<slice.instance.url>http://localhost:5402</slice.instance.url>
		<slice.crx.username>admin</slice.crx.username>
		<slice.crx.password>admin</slice.crx.password>

		<coveralls.repo.token>d6gCI42XTZsvT4VoOTr5qX6vn1G9zgdY0</coveralls.repo.token>
	</properties>

	<scm>
		<connection>scm:git:https://github.com/Cognifide/Slice.git</connection>
		<url>scm:git:https://github.com/Cognifide/Slice.git</url>
		<developerConnection>scm:git|https://github.com/Cognifide/Slice.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<id>maciej.majchrzak</id>
			<name>Maciej Majchrzak</name>
			<email>maciej.majchrzak@cognifide.com</email>
		</developer>
		<developer>
			<id>rafal.malinowski</id>
			<name>Rafal Malinowski</name>
			<email>rafal.malinowski@cognifide.com</email>
		</developer>
	</developers>

	<!--
		////////////////////////////////////////////////////////////////////////
		// build
		//////////////////////////////////////////////////////////////////////
	-->
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-property</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>crx.username</property>
									<message>Using default crx.username = admin</message>
								</requireProperty>
								<requireProperty>
									<property>crx.password</property>
									<message>Using default crx.password = admin</message>
								</requireProperty>
								<requireProperty>
									<property>cq.url</property>
									<message>Using default cq.url = http://localhost:4502</message>
								</requireProperty>
							</rules>
							<fail>false</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.pluggin.version}</version>
				<configuration>
					<fork>false</fork>
					<source>${maven.compile.source}</source>
					<target>${maven.compile.target}</target>
					<compilerVersion>${maven.compiler.version}</compilerVersion>
					<encoding>${maven.compiler.encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- skipping the assembly in root pom (but not in children) -->
				<artifactId>maven-assembly-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<skipAssembly>true</skipAssembly>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<username>${scm.username}</username>
					<password>${scm.password}</password>
					<preparationGoals>clean install</preparationGoals>
					<useReleaseProfile>false</useReleaseProfile>
					<arguments>-Psonatype-oss-release</arguments>
					<mavenExecutorId>forked-path</mavenExecutorId>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.1.0</version>
				<configuration>
					<coberturaReports>
						<coberturaReport>${project.basedir}/target/report/coverage.xml</coberturaReport>
					</coberturaReports>
					<repoToken>${coveralls.repo.token}</repoToken>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>.</directory>
							<includes>
								<include>**/*.ser</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.11</version>
					<configuration>
						<skipExistingHeaders>false</skipExistingHeaders>
						<header>${basedir}/license-template.txt</header>
						<headerDefinitions>
							<header>${basedir}/license-header-definition.txt</header>
						</headerDefinitions>
						<excludes>
							<exclude>**/README</exclude>
							<exclude>src/main/resources/**</exclude>
							<exclude>**/LICENSE.txt</exclude>
							<exclude>**/pom.xml</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4.1</version>
					<configuration>
						<runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
						<descriptors>
							<descriptor>src/main/assembly/${assembly.descriptor.file}</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>cq</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
					<version>2.1.8</version>
					<configuration>
						<bundleFileName>${project.build.directory}/${project.build.finalName}.jar</bundleFileName>
						<user>${slice.crx.username}</user>
						<password>${slice.crx.password}</password>
						<usePut>true</usePut>
						<slingUrl>${slice.instance.url}/system/console</slingUrl>
					</configuration>
					<executions>
						<execution>
							<id>uninstall-bundle</id>
							<goals>
								<goal>uninstall</goal>
							</goals>
						</execution>
						<execution>
							<id>install-bundle</id>
							<goals>
								<goal>install</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Felix OSGi descriptor parser -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.21.0</version>
					<executions>
						<execution>
							<id>generate-scr-scrdescriptor</id>
							<goals>
								<goal>scr</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>4.2.1</version>
					<extensions>true</extensions>
					<configuration>
						<instructions>
							<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
							<Bundle-Name>${project.name}</Bundle-Name>
							<Bundle-Vendor>Cognifide Ltd.</Bundle-Vendor>
						</instructions>
					</configuration>
					<executions>
						<execution>
							<id>baseline</id>
							<goals>
								<goal>baseline</goal>
							</goals>
							<phase>package</phase>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.felix
										</groupId>
										<artifactId>
											maven-scr-plugin
										</artifactId>
										<versionRange>
											[1.7.4,)
										</versionRange>
										<goals>
											<goal>scr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[2.3,)
										</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.cognifide.maven.plugins</groupId>
					<artifactId>maven-crx-plugin</artifactId>
					<version>1.0.3</version>
					<configuration>
						<runOnlyAtExecutionRoot>${maven-crx-plugin.runOnlyAtExecutionRoot}</runOnlyAtExecutionRoot>
						<skip>true</skip>
						<packageFileName>${assembly.path}</packageFileName>
						<packageName>${project.artifactId}</packageName>
						<url>${slice.instance.url}</url>
						<user>${slice.crx.username}</user>
						<password>${slice.crx.password}</password>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Slice -->
			<dependency>
				<groupId>com.cognifide.slice</groupId>
				<artifactId>slice-core-api</artifactId>
				<version>4.5.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.cognifide.slice</groupId>
				<artifactId>slice-core</artifactId>
				<version>4.5.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.cognifide.slice</groupId>
				<artifactId>slice-mapper-api</artifactId>
				<version>4.5.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.cognifide.slice</groupId>
				<artifactId>slice-mapper</artifactId>
				<version>4.5.1-SNAPSHOT</version>
			</dependency>

			<!-- Guice -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>3.0</version>
				<exclusions>
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>aopalliance</groupId>
						<artifactId>aopalliance</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Guice multibinding -->
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-multibindings</artifactId>
				<version>3.0</version>
			</dependency>

			<dependency>
				<groupId>org.ops4j</groupId>
				<artifactId>peaberry</artifactId>
				<version>1.3</version>
			</dependency>

			<!-- Guice's dependency (provided by Spring repository) -->
			<dependency>
				<groupId>org.aopalliance</groupId>
				<artifactId>com.springsource.org.aopalliance</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>com.springsource.javax.inject</artifactId>
				<version>1.0.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- OSGi -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>4.2.0</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bndlib</artifactId>
				<version>2.4.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- javax -->
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>

			<!-- Apache felix scr -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr</artifactId>
				<version>1.6.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.9.10</version>
				<scope>provided</scope>
			</dependency>

			<!-- Apache Sling -->
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.api</artifactId>
				<version>2.4.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.scripting.api</artifactId>
				<version>2.1.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.commons.classloader</artifactId>
				<version>1.3.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-jcr-commons</artifactId>
				<version>2.6.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.4</version>
			</dependency>

			<!-- Code Coverage -->
			<dependency>
				<groupId>net.sourceforge.cobertura</groupId>
				<artifactId>cobertura</artifactId>
				<version>2.1.1</version>
				<optional>true</optional>
				<exclusions>
					<exclusion>
						<artifactId>tools</artifactId>
						<groupId>com.sun</groupId>
					</exclusion>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.19</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>2.0.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>19.0</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Apache Sling -->
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.api</artifactId>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>biz.aQute.bnd</groupId>
			<artifactId>bndlib</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>net.sourceforge.cobertura</groupId>
			<artifactId>cobertura</artifactId>
		</dependency>

	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external/</url>
		</repository>
	</repositories>

	<!--
		////////////////////////////////////////////////////////////////////////
		// reporting
		//////////////////////////////////////////////////////////////////////
	-->
	<reporting>
		<plugins>
			<!-- javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<noindex>false</noindex>
					<show>publish</show>
					<nodeprecated>true</nodeprecated>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>sonatype-oss-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.1.2</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sling</id>
			<activation>
				<property>
					<name>sling</name>
				</property>
			</activation>
			<properties>
				<sling.install.skip>false</sling.install.skip>
			</properties>
		</profile>
	</profiles>
</project>
